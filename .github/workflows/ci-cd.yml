name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: Test Backend
      run: |
        cd backend
        mvn test

    - name: Test Note Service
      run: |
        cd note-service
        mvn test

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Test Frontend
      run: |
        cd frontend
        npm ci
        npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build and push Backend
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: ${{ env.DOCKER_USERNAME }}/project-manager-backend:latest

    - name: Build and push Note Service
      uses: docker/build-push-action@v2
      with:
        context: ./note-service
        push: true
        tags: ${{ env.DOCKER_USERNAME }}/project-manager-note-service:latest

    - name: Build and push Frontend
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        push: true
        tags: ${{ env.DOCKER_USERNAME }}/project-manager-frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Aqui vocÃª adicionaria os comandos para fazer o deploy
        # Por exemplo, usando ssh para conectar ao servidor de staging e atualizar os containers
        # ssh user@staging-server 'docker-compose pull && docker-compose up -d'